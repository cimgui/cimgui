name: Build

on:
  push: {}
  pull_request: {}
  schedule:
    - cron: '0 9 * * 1'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Install Dependencies (LuaJIT + SDL3)
      shell: bash
      env:
        GITHUB_OS: ${{ matrix.os }}
      run: |
        if [ "$GITHUB_OS" == "macOS-latest" ]; then
          brew install luajit sdl3
        elif [ "$GITHUB_OS" == "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y luajit libsdl3-dev
        elif [ "$GITHUB_OS" == "windows-latest" ]; then
          vcpkg install luajit:x64-windows sdl3:x64-windows
          echo "/C/vcpkg/installed/x64-windows/tools/luajit" >> $GITHUB_PATH
          echo "/C/vcpkg/installed/x64-windows/bin" >> $GITHUB_PATH
        fi

    - name: Download Submodules
      run: |
        git submodule update --init --recursive
      if: github.event_name != 'schedule'

    - name: Download Latest ImGui
      shell: bash
      run: |
        rm -rf imgui
        git clone https://github.com/ocornut/imgui.git
      if: github.event_name == 'schedule'

    - name: Generate Bindings
      shell: bash
      run: |
        cd ./generator -c "sdl2 sdlrenderer2 sdl3 sdlrenderer3 sdlgpu3 glfw opengl2 opengl3 vulkan"
        bash ./generator.sh

    - name: CMake
      run: |
        mkdir cmake-build
        cd cmake-build
        cmake -DCIMGUI_TEST=1 ..

    - name: Build
      working-directory: cmake-build
      run: |
        cmake --build .

    - name: Test
      shell: bash
      env:
        GITHUB_OS: ${{ matrix.os }}
      working-directory: cmake-build
      run: |
        if [ "$GITHUB_OS" == "windows-latest" ]; then
          set SDL_VIDEODRIVER=dummy
          ./Debug/cimgui_test.exe
        else
          SDL_VIDEODRIVER=dummy ./cimgui_test
